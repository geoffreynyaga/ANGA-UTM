name: Anga UTM CI

on:
  push:
    branches: [master, develop]
  pull_request:
    branches: [master, develop]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.6]

    # services:
    #   postgres:
    #     image: postgres
    #     ports:
    #       - 5432:5432
    #     env:
    #       POSTGRES_DB: anga_test_db
    #       POSTGRES_USER: postgres
    #       POSTGRES_PASSWORD: postgres

    #     options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 3

    steps:
      - uses: huaxk/postgis-action@v1
        with:
          postgresql version: "11" # See https://https://hub.docker.com/r/mdillon/postgis for available versions, if it is not specified, use the default value 'latest'
          postgresql password: "postgres" # This environment variable sets the superuser password for PostgreSQL, maybe string or secrets, the default superuser is defined by the input environment variable: postgresql user.
          postgresql user: "postgres" # This optional environment variable is used in conjunction with postgresql password to set a user and its password. This variable will create the specified user with superuser power and a database with the same name. If it is not specified, then the default user of 'postgres' will be used.
          postgresql db: "anga_test_db" # This optional environment variable can be used to define a different name for the default database that is created when the image is first started. If it is not specified, then the value of postgresql user will be used.
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Renaming .env.sample to .env
        run: |
          cp .env.sample .env
      - name: Installing Geodjango
        run: |
          sudo apt-get install binutils libproj-dev gdal-bin
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run Tests
        run: |
          py.test --ds=ANGA_UTM.settings.local_testing --nomigrations
